name: build

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
        with:
          submdoules: true

      - name: Ansible Lint
        uses: jrmcdonald/ansible-lint-action@master
        with:
          targets: |
            site.yaml
            terraform.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Format
        uses: hashicorp/terraform-github-actions@1acd6aa
        with:
          tf_actions_version: 'latest'
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: './terraform/'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: lint
    #if: contains(github.ref, 'master') && contains(github.event_name, 'push')
    if: contains(github.event_name, 'pull_request')
    
    env:
      ssh_sock_dir: /tmp/ssh_agent.sock

    steps:
      - uses: actions/checkout@master
        with:
          submdoules: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup GPG
        run: bash bin/gpg-import.sh
        env:
          GPG_PUBKEY: ${{ secrets.CI_GPG_PUBKEY }}
          GPG_PRIVKEY: ${{ secrets.CI_GPG_SUBKEY }}

      - name: Setup SSH
        run: source bin/ssh-import.sh
        env:
          SSH_PRIVKEY: ${{ secrets.CI_SSH_PRIVKEY }}
          SSH_AUTH_SOCK_DIR: ${{ env.ssh_sock_dir }}

      - name: Check SSH Agent is running
        run: |
          echo $SSH_AUTH_SOCK
          ssh-add -L
        env:
          SSH_AUTH_SOCK: ${{ env.ssh_sock_dir }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r kubespray/requirements.txt

      - name: Install Ansible Roles
        run: |
          ansible-galaxy install -r requirements.yaml

      - name: Ansible Run - terraform.yaml
        run: ansible-playbook -i localhost terraform.yaml
        env:
          SSH_AUTH_SOCK: ${{ env.ssh_sock_dir }}
          
      - name: Upload Terraform Output
        uses: actions/upload-artifact@v1
        with:
          name: terraform.stdout
          path: terraform.stdout
          
      - name: Upload Ansible Inventory
        uses: actions/upload-artifact@v1
        with:
          name: production
          path: production

      - name: Ansible Run - site.yaml
        run: ansible-playbook -i production site.yaml --become
        env:
          SSH_AUTH_SOCK: ${{ env.ssh_sock_dir }}